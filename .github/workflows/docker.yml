name: CI to Docker Hub
on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest
    container:
      image: node
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "10"
      - run: npm install
      - run: npm test
#  name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: <region>
#       -
#         name: Login to ECR
#         uses: docker/login-action@v1
#         with:
#           registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
      - name: Checkout
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Test
        id: docker_test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          target: test
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          target: prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
